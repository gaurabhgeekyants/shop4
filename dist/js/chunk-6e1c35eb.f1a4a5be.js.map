{"version":3,"sources":["webpack:///./src/views/pages/notification.vue?0ffe","webpack:///./src/views/pages/notification.vue?4a4c","webpack:///src/views/pages/notification.vue","webpack:///./src/views/pages/notification.vue?273f","webpack:///./src/views/pages/notification.vue?f083"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_l","ntf","index","key","icon","class","staticStyle","on","$event","$router","push","src_url","_v","_s","title","msg","staticRenderFns","data","uid","notificationCount","unreadNotifications","methods","seenMasag","unRead","firebase","elapsedTime","startTime","timeDiff","randomDate","created","snap","doc","isAdminSeen","query","querySnapshot","url","id","role","time","category","component"],"mappings":"uIAAA,W,yCCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,MAAM,CAAC,MAAQ,KAAK,CAACF,EAAG,MAAM,CAACG,YAAY,kBAAkBP,EAAIQ,GAAIR,EAAuB,qBAAE,SAASS,EAAIC,GAAO,OAAON,EAAG,UAAU,CAACO,IAAID,EAAMH,YAAY,YAAY,CAACH,EAAG,eAAe,CAACE,MAAM,CAAC,KAAOG,EAAIG,KAAK,WAAa,CAAE,QAAWH,EAAY,SAAI,kCAAkCL,EAAG,KAAK,CAACG,YAAY,4CAA4CM,MAAM,CAAE,QAAWJ,EAAY,UAAIK,YAAY,CAAC,OAAS,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIiB,QAAQC,KAAKT,EAAIU,YAAY,CAACnB,EAAIoB,GAAGpB,EAAIqB,GAAGZ,EAAIa,UAAUlB,EAAG,QAAQ,CAACJ,EAAIoB,GAAGpB,EAAIqB,GAAGZ,EAAIc,SAAS,MAAK,MAC7pBC,EAAkB,G,gGC+BtB,GAEAC,KAFA,WAGA,OACAC,gCACAC,oBACAC,yBAGAC,SACAC,UADA,aAIAC,OAJA,WAIA,WACAC,2JACA,+BAGAC,YATA,SASAC,GACA,kBACA,WACA,MACAC,OAEA,oBACAA,mBAEA,uBACAA,mBAEA,uBACAA,mBAEA,wBACAA,oBAEA,QAEA,WACA,iCACA,IACA,+BACA,IACA,+BACA,IACA,+BACA,IACA,8BAGA,YAKAC,WA9CA,YA8CA,WAAI,EAAJ,MAAI,EAAJ,MACA,WAMA,OAJA,8BACA,kCACA,kCAEA,IAKAC,QAnEA,WAmEA,WACA,2CACAL,mEACAM,uBACAC,cAAAC,uBAIA,yBACA,uCACA,eACA,iDACAC,uDACA,YACA,QACAC,uBACA,0DACA,CACA,6BACA,GACAC,oBACAC,QACAlC,UACAS,wBACAG,MACAuB,qDACAN,8EACAA,wBAOAhB,4BACAX,qGACAkC,qEACAC,oBAEA,kCAGA,kBAIA,CACA,iDACAN,uCAOAA,uDACA,YACA,QACAC,uBACA,6BACA,GACAC,oBACAC,QACAlC,UACAS,wBACAG,8dACAC,4BACAX,qGACAkC,qEACAC,oBAEA,iCAEA,iBC5KqW,I,wBCQjWC,EAAY,eACd,EACAjD,EACAyB,GACA,EACA,KACA,KACA,MAIa,aAAAwB,E","file":"js/chunk-6e1c35eb.f1a4a5be.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notification.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"\"}},[_c('div',{staticClass:\"demo-alignment\"},_vm._l((_vm.unreadNotifications),function(ntf,index){return _c('vs-list',{key:index,staticClass:\"listIcon\"},[_c('feather-icon',{attrs:{\"icon\":ntf.icon,\"svgClasses\":[(\"text-\" + (ntf.category)), 'stroke-current mr-1 h-6 w-6']}}),_c('h6',{staticClass:\"font-medium block notification-title mb-2\",class:[(\"text-\" + (ntf.category))],staticStyle:{\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.$router.push(ntf.src_url)}}},[_vm._v(_vm._s(ntf.title))]),_c('small',[_vm._v(_vm._s(ntf.msg))])],1)}),1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <vx-card title=\"\">\r\n<!--    <div class=\"demo-alignment\">-->\r\n<!--      <vs-list v-for=\"(ntf, index) in unreadNotifications\" :key=\"index\" class=\"listIcon\" >-->\r\n<!--        <feather-icon :icon=\"ntf.icon\" :svgClasses=\"[`text-${ntf.category}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>-->\r\n\r\n<!--        &lt;!&ndash;<vs-list-item icon-pack=\"feather\" :title=\"ntf.title\" :subtitle=\"ntf.msg\"> {{elapsedTime(ntf.time)}}</vs-list-item>&ndash;&gt;-->\r\n<!--        <span  @click=\"$router.push({name: ntf.src_url})\" class=\"font-medium block notification-title\" :class=\"[`text-${ntf.category}`]\">{{ ntf.title }}</span>-->\r\n<!--       <br> <small>{{ ntf.msg }}</small>-->\r\n<!--      </vs-list>-->\r\n<!--    </div>-->\r\n    <div class=\"demo-alignment\">\r\n\r\n      <vs-list v-for=\"(ntf, index) in unreadNotifications\" :key=\"index\"  class=\"listIcon\" >\r\n        <feather-icon :icon=\"ntf.icon\" :svgClasses=\"[`text-${ntf.category}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>\r\n\r\n        <!--<vs-list-item icon-pack=\"feather\" :title=\"ntf.title\" :subtitle=\"ntf.msg\"> {{elapsedTime(ntf.time)}}</vs-list-item>-->\r\n        <h6  @click=\"$router.push(ntf.src_url)\" class=\"font-medium block notification-title mb-2\" :class=\"[`text-${ntf.category}`]\" style=\"cursor: pointer;\">{{ ntf.title }}</h6>\r\n      <small>{{ ntf.msg }}</small>\r\n\r\n      </vs-list>\r\n    </div>\r\n  </vx-card>\r\n</template>\r\n<script>\r\n    import firebase from 'firebase/app'\r\n    import 'firebase/auth'\r\n    import VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue';\r\n    import VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n    import draggable from 'vuedraggable'\r\n    import moment from 'moment'\r\n\r\n    export default {\r\n\r\n        data() {\r\n            return {\r\n                uid:localStorage.getItem('uid'),\r\n                notificationCount:0,\r\n                unreadNotifications: [],\r\n            }\r\n        },\r\n        methods: {\r\n            seenMasag(){\r\n\r\n            },\r\n            unRead(){\r\n                firebase.firestore().collection('notification').where('receiver_id','==', this.uid).where('isSeen','==',false).orderBy('created_at', 'desc').get().then((snap) => {\r\n                    this.notificationCount=snap.size\r\n                })\r\n            },\r\n            elapsedTime(startTime) {\r\n                let x = new Date(startTime);\r\n                let now = new Date();\r\n                var timeDiff = now - x;\r\n                timeDiff /= 1000;\r\n\r\n                var seconds = Math.round(timeDiff);\r\n                timeDiff = Math.floor(timeDiff / 60);\r\n\r\n                var minutes = Math.round(timeDiff % 60);\r\n                timeDiff = Math.floor(timeDiff / 60);\r\n\r\n                var hours = Math.round(timeDiff % 24);\r\n                timeDiff = Math.floor(timeDiff / 24);\r\n\r\n                var days = Math.round(timeDiff % 365);\r\n                timeDiff = Math.floor(timeDiff / 365);\r\n\r\n                var years = timeDiff;\r\n\r\n                if (years > 0) {\r\n                    return years + (years > 1 ? ' Years ' : ' Year ') + 'ago';\r\n                } else if (days > 0) {\r\n                    return days + (days > 1 ? ' Days ' : ' Day ') + 'ago';\r\n                } else if (hours > 0) {\r\n                    return hours + (hours > 1 ? ' Hrs ' : ' Hour ') + 'ago';\r\n                } else if (minutes > 0) {\r\n                    return minutes + (minutes > 1 ? ' Mins ' : ' Min ') + 'ago';\r\n                } else if (seconds > 0) {\r\n                    return seconds + (seconds > 1 ? ' sec ago' : 'just now');\r\n                }\r\n\r\n                return 'Just Now'\r\n            },\r\n\r\n\r\n            // Method for creating dummy notification time\r\n            randomDate({hr, min, sec}) {\r\n                let date = new Date()\r\n\r\n                if(hr) date.setHours(date.getHours() - hr)\r\n                if(min) date.setMinutes(date.getMinutes() - min)\r\n                if(sec) date.setSeconds(date.getSeconds() - sec)\r\n\r\n                return date\r\n            }\r\n        },\r\n\r\n\r\n        created() {\r\n            if(localStorage.getItem('userRole')=='admin') {\r\n                firebase.firestore().collection('notification').get().then((snap) => {\r\n                    snap.forEach((doc) => {\r\n                        doc.ref.update({isAdminSeen: true})\r\n                    })\r\n                })\r\n            }\r\n            this.notificationCount=0\r\n            let role=localStorage.getItem('userRole')\r\n            if(role == 'admin'){\r\n                let query =firebase.firestore().collection('notification');\r\n                query.orderBy('created_at', 'desc').onSnapshot((querySnapshot) => {\r\n                    this.notify=[]\r\n                    var count=0\r\n                    querySnapshot.forEach((doc) => {\r\n                        if (doc.data()['type'] != 'mealPlan' && doc.data()['type'] != 'chat' )\r\n                        {\r\n                            let timestamp = doc.data()['created_at'];\r\n                        const notify = {\r\n                            url: doc.data()['url'],\r\n                            id: doc.id,\r\n                            index: count + 1,\r\n                            src_url: doc.data()['url'],\r\n                            title:\r\n                                ( role == 'admin') && (doc.data()['type'] == 'assign_trainer_admin')\r\n                                    ? doc.data()['sender_name'] + doc.data()['description'] + ' ' + doc.data()['receiver_name'] :\r\n                                    doc.data()['sender_name'],\r\n                                /*\r\n                                (role == 'member' || role == 'trainer') && (doc.data()['type'] == 'chat') ? ' You have message from ' + doc.data()['sender_name'] :\r\n                                (role == 'admin' && doc.data()['type'] == 'chat') ? doc.data()['sender_name'] + ' send message to ' + doc.data()['receiver_name'] : (role == 'member' ||\r\n                                role == 'admin') && (doc.data()['type'] == 'assign_trainer_admin') ? doc.data()['sender_name'] + doc.data()['description'] + ' ' + doc.data()['receiver_name'] :\r\n                                (role == 'trainer') && (doc.data()['type'] == 'assign_trainer_admin') ? doc.data()['sender_name'] + ' ' + doc.data()['description'] :*/\r\n//                                    doc.data()['sender_name'],\r\n                            msg: doc.data()['description'],\r\n                            icon: (doc.data()['type'] == 'mealPlan') ? 'ListIcon' : (doc.data()['type'] == 'chat') ? 'MessageSquareIcon' : 'UserIcon',\r\n                            time: moment(new Date(timestamp.seconds * 1000)).format('ddd MMM DD  YYYY H:mm:ss'),//doc.data()['created_at'],\r\n                            category: 'primary'\r\n                        }\r\n                            this.unreadNotifications.push(notify)\r\n                    }\r\n                    })\r\n                    this.unRead()\r\n                    // this.unreadNotifications=this.unreadNotifications.slice().reverse()\r\n                })\r\n            }\r\n            else {\r\n                let query =firebase.firestore().collection('notification');\r\n                query = query.where('receiver_id','==', this.uid);\r\n//            }\r\n         /*   else if(role== 'admin'){\r\n                query = query.where('type','!=', 'mealPlan').where('type','!=', 'chat');\r\n\r\n            }*/\r\n//            query.orderBy('created_at','desc').onSnapshot((querySnapshot) => {\r\n            query.orderBy('created_at', 'desc').onSnapshot((querySnapshot) => {\r\n                this.notify=[]\r\n                var count=0\r\n                querySnapshot.forEach((doc) => {\r\n                    let timestamp = doc.data()['created_at'];\r\n                    const notify= {\r\n                        url:doc.data()['url'],\r\n                        id:doc.id,\r\n                        index: count+1,\r\n                        src_url:doc.data()['url'],\r\n                        title: (role=='member'||role=='trainer') && (doc.data()['type']=='chat')?' You have message from '+ doc.data()['sender_name']:(role=='admin' && doc.data()['type']=='chat')? doc.data()['sender_name']+' send message to '+ doc.data()['receiver_name']:(role=='member' || role=='admin')&&(doc.data()['type']=='assign_trainer')?doc.data()['sender_name']+doc.data()['description']+' '+doc.data()['receiver_name']:(role=='trainer')&&(doc.data()['type']=='assign_trainer')?doc.data()['sender_name']+' '+doc.data()['description']:doc.data()['sender_name'] ,\r\n                        msg: doc.data()['description'],\r\n                        icon: (doc.data()['type']=='mealPlan')?'ListIcon':(doc.data()['type']=='chat')?'MessageSquareIcon':'UserIcon',\r\n                        time: moment(new Date(timestamp.seconds * 1000)).format('ddd MMM DD  YYYY H:mm:ss'),//doc.data()['created_at'],\r\n                        category: 'primary'\r\n                    }\r\n                    this.unreadNotifications.push(notify)\r\n                })\r\n                this.unRead()\r\n                // this.unreadNotifications=this.unreadNotifications.slice().reverse()\r\n            })\r\n        }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n .listIcon > span {\r\n   float: left;\r\n   /*margin-top: 8px;*/\r\n }\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notification.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notification.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./notification.vue?vue&type=template&id=3155027f&\"\nimport script from \"./notification.vue?vue&type=script&lang=js&\"\nexport * from \"./notification.vue?vue&type=script&lang=js&\"\nimport style0 from \"./notification.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}