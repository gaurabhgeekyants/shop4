{"version":3,"sources":["webpack:///./src/components/ChangeTimeDurationDropdown.vue?bb3d","webpack:///./src/components/ChangeTimeDurationDropdown.vue","webpack:///./src/views/pages/member/memberStat.vue?11f1","webpack:///src/views/pages/member/memberStat.vue","webpack:///./src/views/pages/member/memberStat.vue?0a10","webpack:///./src/views/pages/member/memberStat.vue","webpack:///./src/views/pages/member/memberStat.vue?aa8e"],"names":["render","_h","_vm","_c","staticClass","class","data","attrs","_v","on","$event","listeners","timeDurationChanged","staticRenderFns","script","component","this","$createElement","_self","directives","name","rawName","value","expression","staticStyle","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","result_mesurement","multiple","_l","option","index","key","domProps","_s","label","resultMeasurement","model","callback","$$v","result","resultValid","configdateTimePicker","next","$set","date","saveData","weightToggle","lineChartWeightSimple","chartOptions","series","waistToggle","lineChartSimple","thighToggle","lineThighChartSimple","armToggle","lineArmChartSimple","chestToggle","lineChestChartSimple","fatToggle","lineFatChartSimple","Vue","require","chart","height","zoom","enabled","colors","dataLabels","stroke","curve","title","text","align","grid","row","opacity","xaxis","categories","uid","line_chart","weightSeries","waistSeries","thighSeries","armSeries","chestSeries","fatSeries","analyticsData","contactMode","datetime","enableTime","dateFormat","contact","components","VueApexCharts","ChangeTimeDurationDropdown","flatPickr","VuePerfectScrollbar","Dropdown","moment","created","methods","chartData","firebase","querySnapshot","weightMonth","weightValue","trainer","waistValue","thighMonth","thighValue","armMonth","armValue","chestMonth","chestValue","fatMonth","fatValue","user_id","result_date","createdAt","memberPayLoad","then","iconPack","icon","color"],"mappings":"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OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,8EACA,kEACA,0BAKA9B,uBACAE,SACAxC,cACAd,UAEAqD,cACAc,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,iBAIAxB,sBACAJ,SACAxC,aACAd,UAEAqD,cACAc,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,iBAIAtB,oBACAN,SACAxC,WACAd,UAEAqD,cACAc,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,iBAIApB,sBACAR,SACAxC,aACAd,UAEAqD,cACAc,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,iBAIAlB,oBACAV,SACAxC,WACAd,UAEAqD,cACAc,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,iBAIA/B,gBACAI,eACAE,eACAE,aACAE,eACAE,aACAoB,gCACAtC,oBACAI,aACAT,0BACA4C,YAAA,8DACAC,gBACAC,eACAC,eACAC,aACAC,eACAC,aACAC,qBACA5D,qBACA6D,aACA,CAAArD,eAAAvB,gBACA,CAAAuB,cAAAvB,eACA,CAAAuB,cAAAvB,eACA,CAAAuB,YAAAvB,aACA,CAAAuB,cAAAvB,eACA,CAAAuB,YAAAvB,cAGA6E,cACA/C,sBACAgD,cACAC,oBAEAnD,UACAG,MACAiD,cAIAC,YACAC,kBACAC,kCACAC,cACA,eACAC,wBACAC,aACAT,gBACAU,YAEAC,QApQA,WAqQA,kBAEAC,SACAC,UADA,WACA,WACAC,0IACA,cACA,SACA,KACAC,uBACAC,6BACAC,2BAGA,kBACA,yCACA,qCAEA,CACA3C,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,mBAMAyB,yIACA,cACA,SACA,KACAC,uBACAG,6BACAC,2BAGA,iBACA,mCACA,+BAEA,CAAA7C,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,mBAMAyB,yIACA,cACA,SACA,KACAC,uBACAK,6BACAC,2BAEA,iBACA,wCACA,oCAEA,CAAA/C,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,mBAMAyB,uIACA,cAEA,SACA,KACAC,uBACAO,6BACAC,2BAGA,eACA,sCACA,kCAEA,CACAjD,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,mBAMAyB,yIACA,cACA,SACA,KACAC,uBACAS,6BACAC,2BAIA,iBACA,wCACA,oCAEA,CACAnD,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,mBAMAyB,uIACA,cACA,SACA,KACAC,uBACAW,6BACAC,2BAIA,eACA,sCACA,kCAEA,CACArD,OACAC,WACAC,MACAC,aAGAC,2DACAC,YACAF,YAEAG,QACAC,kBAEAC,OACAC,QACAC,cAEAC,MACAC,KACAR,iCACAS,aAGAC,OACAC,oBAMAhC,SA1QA,WA0QA,WACA,sEACA,+FACA,wEACA,uEACA,CACA,+BACA,kBACA,yBACA,OACAN,kCACAb,mEACA0F,iBACAC,mDACAC,sDAEAhB,8CACAiB,GAEAC,MAAA,WACA,YACA,kBACA,uBACA,cACA,cACAlD,0CACAC,QACAkD,mBACAC,kBACAC,qBAGA,YACA,cACArD,cACAC,eACAkD,mBACAC,yBACAC,wBC5tBkX,I,wBCQ9WvH,EAAY,eACd,EACAf,EACAa,GACA,EACA,KACA,KACA,MAIa,aAAAE,E,kECnBf","file":"js/chunk-43fd210c.f9ca6322.js","sourcesContent":["var render = function (_h,_vm) {var _c=_vm._c;return _c('vs-dropdown',{staticClass:\"cursor-pointer\",class:_vm.data.staticClass,attrs:{\"vs-trigger-click\":\"\"}},[_c('small',{staticClass:\"flex cursor-pointer\"},[_c('span',[_vm._v(\"Last 7 days\")]),_c('feather-icon',{staticClass:\"ml-1\",attrs:{\"icon\":\"ChevronDownIcon\",\"svgClasses\":\"h-4 w-4\"}})],1),_c('vs-dropdown-menu',{staticClass:\"w-32\"},[_c('vs-dropdown-item',{on:{\"click\":function($event){_vm.listeners.timeDurationChanged ? { timeDurationChanged: _vm.listeners.timeDurationChanged('last-28-days') } : null}}},[_vm._v(\"Last 20 days\")]),_c('vs-dropdown-item',{on:{\"click\":function($event){_vm.listeners.timeDurationChanged ? { timeDurationChanged: _vm.listeners.timeDurationChanged('last-month') } : null}}},[_vm._v(\"Last Month\")]),_c('vs-dropdown-item',{on:{\"click\":function($event){_vm.listeners.timeDurationChanged ? { timeDurationChanged: _vm.listeners.timeDurationChanged('last-year') } : null}}},[_vm._v(\"Last Year\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ChangeTimeDurationDropdown.vue?vue&type=template&id=56811272&functional=true&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  true,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vx-col w-full\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('div',{staticClass:\"vx-row cstm-member\"},[_c('div',{staticClass:\"vx-col sm:w-1/4 mb-4\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.result_mesurement),expression:\"result_mesurement\"}],staticClass:\"w-full vs-inputx vs-input--input normal\",staticStyle:{\"height\":\"43px\",\"padding\":\"5px 10px\",\"border-radius\":\"3px\",\"border\":\"1px solid rgba(0,0,0,.2)\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.result_mesurement=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"selected\":\"\"}},[_vm._v(\"Select Result Measurement\")]),_vm._l((_vm.contactMode),function(option,index){return _c('option',{key:index,domProps:{\"value\":option.value}},[_vm._v(_vm._s(option.label)+\"\\n          \")])})],2),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.resultMeasurement == 'true'),expression:\"resultMeasurement == 'true'\"}],staticClass:\"text-danger text-sm\"},[_vm._v(\"The Result Measurement field is requied.\")])]),_c('div',{staticClass:\"vx-col sm:w-1/4 mb-4\"},[_c('div',{staticClass:\"centerx default-input\"},[_c('vs-input',{staticClass:\"inputx cstm-input w-full\",attrs:{\"placeholder\":\"Result\"},model:{value:(_vm.result),callback:function ($$v) {_vm.result=$$v},expression:\"result\"}})],1),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.resultValid == 'true'),expression:\"resultValid == 'true'\"}],staticClass:\"text-danger text-sm\"},[_vm._v(\"The Result field is requied.\")])]),_c('div',{staticClass:\"vx-col sm:w-1/4 mb-4\"},[_c('flat-pickr',{staticClass:\"flatpickr-input cstm-input w-full\",attrs:{\"config\":_vm.configdateTimePicker,\"placeholder\":\"Result Date\"},model:{value:(_vm.next.contact),callback:function ($$v) {_vm.$set(_vm.next, \"contact\", $$v)},expression:\"next.contact\"}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.date == 'true'),expression:\"date == 'true'\"}],staticClass:\"text-danger text-sm\"},[_vm._v(\"The Date field is requied.\")])],1),_c('div',{staticClass:\"vx-col sm:w-1/4\"},[_c('vs-button',{staticClass:\"mr-3 mb-2 button-save\",attrs:{\"id\":\"button-save\"},on:{\"click\":function($event){return _vm.saveData()}}},[_vm._v(\"Save\\n      \")])],1)])])])]),_c('br'),_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col w-full md:w-1/2 mb-base\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('h4',[_vm._v(\"Weight Report\")]),_c('vue-apex-charts',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.weightToggle === true),expression:\"weightToggle === true\"}],attrs:{\"type\":\"line\",\"height\":\"350\",\"options\":_vm.lineChartWeightSimple.chartOptions,\"series\":_vm.lineChartWeightSimple.series}}),_c('h6',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.weightToggle === false),expression:\"weightToggle === false\"}],staticStyle:{\"text-align\":\"center\",\"padding\":\"141px 0\"}},[_vm._v(\"Measurement not Added Yet!\")])],1)])])]),_c('div',{staticClass:\"vx-col w-full md:w-1/2 mb-base\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('h4',[_vm._v(\"Waist Report\")]),_c('vue-apex-charts',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.waistToggle === true),expression:\"waistToggle === true\"}],attrs:{\"type\":\"line\",\"height\":\"350\",\"options\":_vm.lineChartSimple.chartOptions,\"series\":_vm.lineChartSimple.series}}),_c('h6',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.waistToggle === false),expression:\"waistToggle === false\"}],staticStyle:{\"text-align\":\"center\",\"padding\":\"141px 0\"}},[_vm._v(\"Measurement not Added Yet!\")])],1)])])])]),_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col w-full md:w-1/2 mb-base\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('h4',[_vm._v(\"Thigh Report\")]),_c('vue-apex-charts',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.thighToggle === true),expression:\"thighToggle === true\"}],attrs:{\"type\":\"line\",\"height\":\"350\",\"options\":_vm.lineThighChartSimple.chartOptions,\"series\":_vm.lineThighChartSimple.series}}),_c('h6',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.thighToggle === false),expression:\"thighToggle === false\"}],staticStyle:{\"text-align\":\"center\",\"padding\":\"141px 0\"}},[_vm._v(\"Measurement not Added Yet!\")])],1)])])]),_c('div',{staticClass:\"vx-col w-full md:w-1/2 mb-base\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('h4',[_vm._v(\"Arm Report\")]),_c('vue-apex-charts',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.armToggle === true),expression:\"armToggle === true\"}],attrs:{\"type\":\"line\",\"height\":\"350\",\"options\":_vm.lineArmChartSimple.chartOptions,\"series\":_vm.lineArmChartSimple.series}}),_c('h6',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.armToggle === false),expression:\"armToggle === false\"}],staticStyle:{\"text-align\":\"center\",\"padding\":\"141px 0\"}},[_vm._v(\"Measurement not Added Yet!\")])],1)])])])]),_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col w-full md:w-1/2 mb-base\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('h4',[_vm._v(\"Chest Report\")]),_c('vue-apex-charts',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.chestToggle === true),expression:\"chestToggle === true\"}],attrs:{\"type\":\"line\",\"height\":\"350\",\"options\":_vm.lineChestChartSimple.chartOptions,\"series\":_vm.lineChestChartSimple.series}}),_c('h6',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.chestToggle === false),expression:\"chestToggle === false\"}],staticStyle:{\"text-align\":\"center\",\"padding\":\"141px 0\"}},[_vm._v(\"Measurement not Added Yet!\")])],1)])])]),_c('div',{staticClass:\"vx-col w-full md:w-1/2 mb-base\"},[_c('div',{staticClass:\"vx-card\"},[_c('div',{staticClass:\"vx-card__collapsible-content vs-con-loading__container\"},[_c('div',{staticClass:\"vx-card__body\"},[_c('h4',[_vm._v(\"Fat Report\")]),_c('vue-apex-charts',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.fatToggle === true),expression:\"fatToggle === true\"}],attrs:{\"type\":\"line\",\"height\":\"350\",\"options\":_vm.lineFatChartSimple.chartOptions,\"series\":_vm.lineFatChartSimple.series}}),_c('h6',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.fatToggle === false),expression:\"fatToggle === false\"}],staticStyle:{\"text-align\":\"center\",\"padding\":\"141px 0\"}},[_vm._v(\"Measurement not Added Yet!\")])],1)])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\r\n    File Name: Graphs for Measurement\r\n    Description: These Details are for trainer\r\n     ========================================================================================== -->\r\n\r\n<template>\r\n\r\n  <div class=\"vx-col w-full\">\r\n    <!--    <div class=\"vx-col lg:w-1/2 sm:w-1/4\">-->\r\n    <div class=\"vx-card\">\r\n      <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n        <div class=\"vx-card__body\">\r\n    <div class=\"vx-row cstm-member\">\r\n\r\n      <div class=\"vx-col sm:w-1/4 mb-4\">\r\n        <!--<div class=\"vx-card\">-->\r\n          <select v-model=\"result_mesurement\" class=\"w-full vs-inputx vs-input--input normal\" style=\" height: 43px; padding: 5px 10px; border-radius: 3px; border: 1px solid rgba(0,0,0,.2)\">\r\n            <option value=\"\" selected>Select Result Measurement</option>\r\n            <option v-for=\"(option, index) in contactMode\" :key=\"index\" :value=\"option.value\">{{ option.label }}\r\n            </option>\r\n          </select>\r\n        <!--</div>-->\r\n        <span class=\"text-danger text-sm\"\r\n              v-show=\"resultMeasurement == 'true'\">The Result Measurement field is requied.</span>\r\n\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/4 mb-4\">\r\n        <!--<vs-input-->\r\n          <!--name=\"result\"-->\r\n          <!--label-placeholder=\"Result\"-->\r\n          <!--v-model=\"result\"-->\r\n          <!--class=\"cstm-input w-full\"/>-->\r\n        <div class=\"centerx default-input\">\r\n          <vs-input class=\"inputx cstm-input w-full\" placeholder=\"Result\"  v-model=\"result\" />\r\n          <!--<vs-input disabled class=\"inputx\" placeholder=\"Disabled\" v-model=\"value2\" />-->\r\n        </div>\r\n        <span class=\"text-danger text-sm\" v-show=\"resultValid == 'true'\">The Result field is requied.</span>\r\n      </div>\r\n      <!--      </div>-->\r\n      <!--      <div class=\"vx-row\">-->\r\n      <div class=\"vx-col sm:w-1/4 mb-4\">\r\n        <flat-pickr :config=\"configdateTimePicker\" v-model=\"next.contact\" placeholder=\"Result Date\"\r\n                    class=\"flatpickr-input cstm-input w-full\"/>\r\n        <span class=\"text-danger text-sm\" v-show=\"date == 'true'\">The Date field is requied.</span>\r\n\r\n      </div>\r\n      <!--      <div class=\"vx-row\">-->\r\n      <div class=\"vx-col sm:w-1/4\">\r\n        <vs-button class=\"mr-3 mb-2 button-save\" id=\"button-save\"  @click=\"saveData()\">Save\r\n        </vs-button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/2 mb-base\">\r\n        <div class=\"vx-card\">\r\n          <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n            <div class=\"vx-card__body\">\r\n              <h4>Weight Report</h4>\r\n              <vue-apex-charts  v-show=\"weightToggle === true\" type=\"line\" height=\"350\" :options=\"lineChartWeightSimple.chartOptions\" :series=\"lineChartWeightSimple.series\"></vue-apex-charts>\r\n              <h6 style=\"text-align: center;padding: 141px 0;\"  v-show=\"weightToggle === false\" >Measurement not Added Yet!</h6>\r\n              <!--<line-chart :data=\"weightSeries\" ytitle=\"Kg\"></line-chart>-->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"vx-col w-full md:w-1/2 mb-base\">\r\n        <div class=\"vx-card\">\r\n          <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n            <div class=\"vx-card__body\">\r\n          <h4>Waist Report</h4>\r\n          <!--<line-chart :data=\"waistSeries\" ytitle=\"Inches\"></line-chart>-->\r\n              <vue-apex-charts  v-show=\"waistToggle === true\" type=\"line\" height=\"350\" :options=\"lineChartSimple.chartOptions\" :series=\"lineChartSimple.series\"></vue-apex-charts>\r\n              <h6 style=\"text-align: center;padding: 141px 0;\"  v-show=\"waistToggle === false\" >Measurement not Added Yet!</h6>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/2 mb-base\">\r\n        <div class=\"vx-card\" >\r\n          <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n            <div class=\"vx-card__body\">\r\n          <h4>Thigh Report</h4>\r\n          <!--<line-chart :data=\"thighSeries\" ytitle=\"Inches\"></line-chart>-->\r\n              <vue-apex-charts v-show=\"thighToggle === true\" type=\"line\" height=\"350\" :options=\"lineThighChartSimple.chartOptions\" :series=\"lineThighChartSimple.series\"></vue-apex-charts>\r\n              <h6 style=\"text-align: center;padding: 141px 0;\"  v-show=\"thighToggle === false\" >Measurement not Added Yet!</h6>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"vx-col w-full md:w-1/2 mb-base\">\r\n        <div class=\"vx-card\">\r\n          <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n            <div class=\"vx-card__body\">\r\n          <h4>Arm Report</h4>\r\n          <!--<line-chart :data=\"armSeries\" ytitle=\"Inches\"></line-chart>-->\r\n              <vue-apex-charts  v-show=\"armToggle === true\" type=\"line\" height=\"350\" :options=\"lineArmChartSimple.chartOptions\" :series=\"lineArmChartSimple.series\"></vue-apex-charts>\r\n              <h6 style=\"text-align: center;padding: 141px 0;\"  v-show=\"armToggle === false\" >Measurement not Added Yet!</h6>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/2 mb-base\">\r\n        <div class=\"vx-card\" >\r\n          <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n            <div class=\"vx-card__body\">\r\n          <h4>Chest Report</h4>\r\n          <!--<line-chart :data=\"chestSeries\" ytitle=\"Inches\"></line-chart>-->\r\n              <vue-apex-charts v-show=\"chestToggle === true\" type=\"line\" height=\"350\" :options=\"lineChestChartSimple.chartOptions\" :series=\"lineChestChartSimple.series\"></vue-apex-charts>\r\n              <h6 style=\"text-align: center;padding: 141px 0;\"  v-show=\"chestToggle === false\" >Measurement not Added Yet!</h6>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"vx-col w-full md:w-1/2 mb-base\">\r\n        <div class=\"vx-card\">\r\n          <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n            <div class=\"vx-card__body\">\r\n          <h4>Fat Report</h4>\r\n          <!--<line-chart :data=\"fatSeries\" ytitle=\"Percentage\"></line-chart>-->\r\n              <vue-apex-charts  v-show=\"fatToggle === true\" type=\"line\" height=\"350\" :options=\"lineFatChartSimple.chartOptions\" :series=\"lineFatChartSimple.series\"></vue-apex-charts>\r\n              <h6 style=\"text-align: center;padding: 141px 0;\"  v-show=\"fatToggle === false\" >Measurement not Added Yet!</h6>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import Vue from 'vue'\r\n    import Chartkick from 'vue-chartkick'\r\n    import Chart from 'chart.js'\r\n\r\n    Vue.use(Chartkick.use(Chart))\r\n    import analyticsData from '../../ui-elements/card/analyticsData.js'\r\n    import ChangeTimeDurationDropdown from '@/components/ChangeTimeDurationDropdown.vue'\r\n    import firebase from 'firebase/app'\r\n    import vSelect from 'vue-select'\r\n\r\n    require('firebase/firestore')\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n    import moment from 'moment'\r\n    import Dropdown from 'vue-simple-search-dropdown';\r\n    import datetime from 'vuejs-datetimepicker';\r\n    import VueApexCharts from 'vue-apexcharts'\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n//                themeColors:\r\n                lineChartSimple: {\r\n                    series: [{\r\n                        name: \"Waist\",\r\n                        data: []//[10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n                    }],\r\n                    chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                        chart: {\r\n                            height: 350,\r\n                            zoom: {\r\n                                enabled: false\r\n                            }\r\n                        },\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        stroke: {\r\n                            curve: 'straight'\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        grid: {\r\n                            row: {\r\n                                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                opacity: 0.5\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            categories:[\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\",\r\n                                \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\",\r\n                                \"2018-09-19T06:30:00\"\r\n                            ],// ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                        }\r\n                    }\r\n                },\r\n                lineChartWeightSimple: {\r\n                    series: [{\r\n                        name: \"Weight\",\r\n                        data: []//[10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n                    }],\r\n                    chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                        chart: {\r\n                            height: 350,\r\n                            zoom: {\r\n                                enabled: false\r\n                            }\r\n                        },\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        stroke: {\r\n                            curve: 'straight'\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        grid: {\r\n                            row: {\r\n                                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                opacity: 0.5\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            categories:[],// ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                        }\r\n                    }\r\n                },\r\n                lineThighChartSimple:{\r\n                    series: [{\r\n                        name: \"Thigh\",\r\n                        data: []//[10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n                    }],\r\n                    chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                        chart: {\r\n                            height: 350,\r\n                            zoom: {\r\n                                enabled: false\r\n                            }\r\n                        },\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        stroke: {\r\n                            curve: 'straight'\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        grid: {\r\n                            row: {\r\n                                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                opacity: 0.5\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            categories:[],// ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                        }\r\n                    }\r\n                },\r\n                lineArmChartSimple:{\r\n                    series: [{\r\n                        name: \"Arm\",\r\n                        data: []//[10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n                    }],\r\n                    chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                        chart: {\r\n                            height: 350,\r\n                            zoom: {\r\n                                enabled: false\r\n                            }\r\n                        },\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        stroke: {\r\n                            curve: 'straight'\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        grid: {\r\n                            row: {\r\n                                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                opacity: 0.5\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            categories:[],// ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                        }\r\n                    }\r\n                },\r\n                lineChestChartSimple:{\r\n                    series: [{\r\n                        name: \"Chest\",\r\n                        data: []//[10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n                    }],\r\n                    chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                        chart: {\r\n                            height: 350,\r\n                            zoom: {\r\n                                enabled: false\r\n                            }\r\n                        },\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        stroke: {\r\n                            curve: 'straight'\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        grid: {\r\n                            row: {\r\n                                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                opacity: 0.5\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            categories:[],\r\n                        }\r\n                    }\r\n                },\r\n                lineFatChartSimple:{\r\n                    series: [{\r\n                        name: \"Fat\",\r\n                        data: []//[10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n                    }],\r\n                    chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                        chart: {\r\n                            height: 350,\r\n                            zoom: {\r\n                                enabled: false\r\n                            }\r\n                        },\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        stroke: {\r\n                            curve: 'straight'\r\n                        },\r\n                        title: {\r\n                            text: '',\r\n                            align: 'left'\r\n                        },\r\n                        grid: {\r\n                            row: {\r\n                                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                opacity: 0.5\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            categories:[],\r\n                        }\r\n                    }\r\n                },\r\n                weightToggle:false,\r\n                waistToggle:false,\r\n                thighToggle:false,\r\n                armToggle:false,\r\n                chestToggle:false,\r\n                fatToggle:false,\r\n                uid:localStorage.getItem('uid'),\r\n                resultValid: 'false',\r\n                date: 'false',\r\n                resultMeasurement: 'false',\r\n                line_chart: {'2017-05-13': 2, '2017-05-14': 5, '2017-06-14': 5, '2017-07-14': 15},\r\n                weightSeries: {},\r\n                waistSeries: {},\r\n                thighSeries: {},\r\n                armSeries: {},\r\n                chestSeries: {},\r\n                fatSeries: {},\r\n                analyticsData: analyticsData,\r\n                result_mesurement: '',\r\n                contactMode: [\r\n                    {label: 'Weight', value: 'weight'},\r\n                    {label: 'Waist', value: 'waist'},\r\n                    {label: 'Thigh', value: 'thigh'},\r\n                    {label: 'Arm', value: 'arm'},\r\n                    {label: 'Chest', value: 'chest'},\r\n                    {label: 'Fat', value: 'fat'}\r\n                ],\r\n\r\n                datetime: null,\r\n                configdateTimePicker: {\r\n                    enableTime: false,\r\n                    dateFormat: 'm-d-Y'\r\n                },\r\n                result: '',\r\n                next: {\r\n                    contact: []\r\n                },\r\n            }\r\n        },\r\n        components: {\r\n            VueApexCharts,\r\n            ChangeTimeDurationDropdown,\r\n            flatPickr,\r\n            'v-select': vSelect,\r\n            VuePerfectScrollbar,\r\n            Dropdown,\r\n            datetime,\r\n            moment\r\n        },\r\n        created() {\r\n            this.chartData()\r\n        },\r\n        methods: {\r\n            chartData() {\r\n                firebase.firestore().collection('measurement').where('user_id', '==', this.uid).where('result_mesurement', '==', 'weight').get().then((querySnapshot) => {\r\n                    if (querySnapshot.size >= 1) {\r\n                        var weightMonth = [];\r\n                        var weightValue = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            weightMonth.push(doc.data().result_date)\r\n                            weightValue.push(doc.data().result)\r\n                        })\r\n\r\n                        this.weightToggle = true\r\n                        this.lineChartWeightSimple.series[0].data=weightValue\r\n                        this.lineChartWeightSimple.chartOptions=\r\n//                            chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                            {\r\n                                chart: {\r\n                                height: 350,\r\n                                zoom: {\r\n                                    enabled: false\r\n                                }\r\n                            },\r\n                                colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                                dataLabels: {\r\n                                    enabled: false\r\n                                },\r\n                                stroke: {\r\n                                    curve: 'straight'\r\n                                },\r\n                                title: {\r\n                                    text: '',\r\n                                    align: 'left'\r\n                                },\r\n                                grid: {\r\n                                    row: {\r\n                                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                        opacity: 0.5\r\n                                    },\r\n                                },\r\n                                xaxis: {\r\n                                    categories:weightMonth\r\n                                }\r\n                            }\r\n                    }\r\n                })\r\n\r\n                firebase.firestore().collection('measurement').where('user_id', '==', this.uid).where('result_mesurement', '==', 'waist').get().then((querySnapshot) => {\r\n                    if (querySnapshot.size >= 1) {\r\n                        var trainer = [];//{};\r\n                        var waistValue = [];//{};\r\n                        querySnapshot.forEach((doc) => {\r\n                            trainer.push(doc.data().result_date)\r\n                            waistValue.push(doc.data().result)\r\n\r\n                        })\r\n                        this.waistToggle = true\r\n                        this.lineChartSimple.series[0].data=waistValue\r\n                        this.lineChartSimple.chartOptions=\r\n//                            chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                            {chart: {\r\n                                height: 350,\r\n                                    zoom: {\r\n                                    enabled: false\r\n                                }\r\n                            },\r\n                            colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                                dataLabels: {\r\n                                enabled: false\r\n                            },\r\n                            stroke: {\r\n                                curve: 'straight'\r\n                            },\r\n                            title: {\r\n                                text: '',\r\n                                    align: 'left'\r\n                            },\r\n                            grid: {\r\n                                row: {\r\n                                    colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                        opacity: 0.5\r\n                                },\r\n                            },\r\n                            xaxis: {\r\n                                categories:trainer\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n\r\n                firebase.firestore().collection('measurement').where('user_id', '==', this.uid).where('result_mesurement', '==', 'thigh').get().then((querySnapshot) => {\r\n                    if (querySnapshot.size >= 1) {\r\n                        var thighMonth = [];\r\n                        var thighValue = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            thighMonth.push(doc.data().result_date)\r\n                            thighValue.push(doc.data().result)\r\n                        })\r\n                        this.thighToggle = true\r\n                        this.lineThighChartSimple.series[0].data=thighValue\r\n                        this.lineThighChartSimple.chartOptions=\r\n//                            chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                            {chart: {\r\n                                height: 350,\r\n                                zoom: {\r\n                                    enabled: false\r\n                                }\r\n                            },\r\n                                colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                                dataLabels: {\r\n                                    enabled: false\r\n                                },\r\n                                stroke: {\r\n                                    curve: 'straight'\r\n                                },\r\n                                title: {\r\n                                    text: '',\r\n                                    align: 'left'\r\n                                },\r\n                                grid: {\r\n                                    row: {\r\n                                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                        opacity: 0.5\r\n                                    },\r\n                                },\r\n                                xaxis: {\r\n                                    categories:thighMonth\r\n                                }\r\n                            }\r\n                    }\r\n                })\r\n\r\n                firebase.firestore().collection('measurement').where('user_id', '==', this.uid).where('result_mesurement', '==', 'arm').get().then((querySnapshot) => {\r\n                    if (querySnapshot.size >= 1) {\r\n//                        var trainer = {};\r\n                        var armMonth = [];\r\n                        var armValue = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            armMonth.push(doc.data().result_date)\r\n                            armValue.push(doc.data().result)\r\n                        })\r\n//                        this.armSeries = trainer\r\n                        this.armToggle=true\r\n                        this.lineArmChartSimple.series[0].data=armValue\r\n                        this.lineArmChartSimple.chartOptions=\r\n//                            chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                            {\r\n                                chart: {\r\n                                height: 350,\r\n                                zoom: {\r\n                                    enabled: false\r\n                                }\r\n                            },\r\n                                colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                                dataLabels: {\r\n                                    enabled: false\r\n                                },\r\n                                stroke: {\r\n                                    curve: 'straight'\r\n                                },\r\n                                title: {\r\n                                    text: '',\r\n                                    align: 'left'\r\n                                },\r\n                                grid: {\r\n                                    row: {\r\n                                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                        opacity: 0.5\r\n                                    },\r\n                                },\r\n                                xaxis: {\r\n                                    categories:armMonth\r\n                                }\r\n                            }\r\n                    }\r\n                })\r\n\r\n                firebase.firestore().collection('measurement').where('user_id', '==', this.uid).where('result_mesurement', '==', 'chest').get().then((querySnapshot) => {\r\n                    if (querySnapshot.size >= 1) {\r\n                        var chestMonth = [];\r\n                        var chestValue = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            chestMonth.push(doc.data().result_date)\r\n                            chestValue.push(doc.data().result)\r\n                        })\r\n//                        lineChestChartSimple\r\n//                        this.chestSeries = trainer\r\n                        this.chestToggle=true\r\n                        this.lineChestChartSimple.series[0].data=chestValue\r\n                        this.lineChestChartSimple.chartOptions=\r\n//                            chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                            {\r\n                                chart: {\r\n                                    height: 350,\r\n                                    zoom: {\r\n                                        enabled: false\r\n                                    }\r\n                                },\r\n                                colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                                dataLabels: {\r\n                                    enabled: false\r\n                                },\r\n                                stroke: {\r\n                                    curve: 'straight'\r\n                                },\r\n                                title: {\r\n                                    text: '',\r\n                                    align: 'left'\r\n                                },\r\n                                grid: {\r\n                                    row: {\r\n                                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                        opacity: 0.5\r\n                                    },\r\n                                },\r\n                                xaxis: {\r\n                                    categories:chestMonth\r\n                                }\r\n                            }\r\n                    }\r\n                })\r\n\r\n                firebase.firestore().collection('measurement').where('user_id', '==', this.uid).where('result_mesurement', '==', 'fat').get().then((querySnapshot) => {\r\n                    if (querySnapshot.size >= 1) {\r\n                        var fatMonth = [];\r\n                        var fatValue = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            fatMonth.push(doc.data().result_date)\r\n                            fatValue.push(doc.data().result)\r\n                        })\r\n//                        this.fatSeries = trainer\r\n\r\n                        this.fatToggle=true\r\n                        this.lineFatChartSimple.series[0].data=fatValue\r\n                        this.lineFatChartSimple.chartOptions=\r\n//                            chartOptions: {//lineChartSimple.chartOptions.xaxis.categories\r\n                            {\r\n                                chart: {\r\n                                    height: 350,\r\n                                    zoom: {\r\n                                        enabled: false\r\n                                    }\r\n                                },\r\n                                colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],//themeColors,\r\n                                dataLabels: {\r\n                                    enabled: false\r\n                                },\r\n                                stroke: {\r\n                                    curve: 'straight'\r\n                                },\r\n                                title: {\r\n                                    text: '',\r\n                                    align: 'left'\r\n                                },\r\n                                grid: {\r\n                                    row: {\r\n                                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                                        opacity: 0.5\r\n                                    },\r\n                                },\r\n                                xaxis: {\r\n                                    categories:fatMonth\r\n                                }\r\n                            }\r\n                    }\r\n                })\r\n            },\r\n            saveData() {\r\n                if (this.result_mesurement == '' || this.next.contact == '' || this.result == '') {\r\n                    this.resultMeasurement = ((this.result_mesurement == '') || (this.result_mesurement == null) ? 'true' : 'false')\r\n                    this.date = ((this.next.contact == '') || (this.next.contact == null) ? 'true' : 'false')//(this.date == 'false'?'true':'false')\r\n                    this.resultValid = ((this.result == '') || (this.result == null) ? 'true' : 'false')//(this.resultValid == 'false'?'true':'false')\r\n                } else {\r\n                    this.resultMeasurement = 'false'\r\n                    this.date = 'false'\r\n                    this.resultValid = 'false'\r\n                    const memberPayLoad = {\r\n                        result: this.result ? this.result : '',\r\n                        result_mesurement: this.result_mesurement? this.result_mesurement: '',\r\n                        user_id: this.uid,\r\n                        result_date: this.next.contact ? this.next.contact : '',\r\n                        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    }\r\n                    firebase.firestore().collection(\"measurement\").add(\r\n                        memberPayLoad\r\n                    )\r\n                        .then(() => {\r\n                                this.result = ''\r\n                                this.next.contact = ''\r\n                                this.result_mesurement = ''\r\n                                this.chartData()\r\n                                this.$vs.notify({\r\n                                    title: 'measurement Created Successfully!',\r\n                                    text: '',\r\n                                    iconPack: 'feather',\r\n                                    icon: 'icon-check',\r\n                                    color: 'success'\r\n                                });\r\n                            },\r\n                            (error) => {\r\n                                this.$vs.notify({\r\n                                    title: 'Error',\r\n                                    text: error.message,\r\n                                    iconPack: 'feather',\r\n                                    icon: 'icon-alert-circle',\r\n                                    color: 'danger'\r\n                                });\r\n                            })\r\n                }\r\n\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  #dashboard-analytics {\r\n    .greet-user {\r\n      position: relative;\r\n\r\n      .decore-left {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n      }\r\n\r\n      .decore-right {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n      }\r\n    }\r\n\r\n\r\n    @media(max-width: 576px) {\r\n      .decore-left, .decore-right {\r\n        width: 140px;\r\n      }\r\n      .button-save{margin-top: 5px !important;}\r\n    }\r\n  }\r\n  .cstm-input, .cstm-input input{margin-top: 0 !important;height: 43px !important;}\r\n  h4{\r\n    padding: 15px 47px;\r\n  }\r\n  @media(max-width: 576px) {\r\n    .decore-left, .decore-right {\r\n      width: 140px;\r\n    }\r\n  }\r\n  ::placeholder{color:rgba(0, 0, 0, 0.2);}\r\n  select:focus{\r\n    border: 1px solid rgba(var(--vs-primary),1)!important;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./memberStat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./memberStat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./memberStat.vue?vue&type=template&id=f951c810&\"\nimport script from \"./memberStat.vue?vue&type=script&lang=js&\"\nexport * from \"./memberStat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./memberStat.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./memberStat.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}